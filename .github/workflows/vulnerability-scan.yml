name: vulnerability scanning
on:
  schedule:
    - cron: '15 8 * * *'
  # DEBUG
  pull_request:
    branches: [ "main" ]
  workflow_call:
    inputs:
      images:
        type: string
        default: ''
        required: true
        description: a list of image names to be scanned, seperated by comma (empty means ALL)

env:
  REGISTRY: ghcr.io

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set image matrix
        id: set-matrix
        run: |
          echo "${{ toJSON(inputs) }}"
          declare IMAGES
          if [ -z "${{ github.event.inputs.images }}" ]; then
            IMAGES="$(./.github/scripts/get-images.sh)" || exit 1
          else
            IMAGES="${{ inputs.images }}"
          fi
          IFS=, IMAGE_ARRAY=(${IMAGES})

          declare -a IMAGE_TAGS
          for IMAGE in "${IMAGE_ARRAY[@]}"; do
            IMAGE_TAGS+=("${IMAGE}:latest")
            VERSION=$(cat "${IMAGE}/VERSION") || true
            if [ -n "${VERSION}" ]; then
              if [[ ${VERSION} =~ ^([[:alnum:]]|[_])([[:alnum:]]|[-_.])*$ ]]
              then
                IMAGE_TAGS+=("${IMAGE}:${VERSION}")
              fi
            fi
          done
 
          JSON_IMAGE_TAGS=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${IMAGE_TAGS[@]}")
          echo "TARGET_MATRIX: ${JSON_IMAGE_TAGS}"
          echo "::set-output name=image_tags_matrix::${JSON_IMAGE_TAGS}"
        shell: bash
    outputs:
      target_matrix: ${{ steps.set-matrix.outputs.image_tags_matrix }}

  scan:
    name: Scan
    needs: build-matrix
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target_tag: ${{ fromJson(needs.build-matrix.outputs.target_matrix) }}
    env:
      IMAGE_TAG_NAME: ${{ github.repository_owner }}/${{ matrix.target_tag }}
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.REGISTRY }}/${{ env.IMAGE_TAG_NAME}}"
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'